version: '1.0'

services:
#  redis:
#    image: redis:latest
#    build: ./redis-docker
#    ports:
#      - 6379:6379
#    volumes:
#      - ./redis-docker:/usr/local/etc/redis/redis.conf
#      - ./redis-docker/redis-data:/var/lib/redis
#    environment:
#      - REDIS_REPLICATION_MODE=master
#    command: redis-server

  gateway:
    image: lab_2_service_gateway
    container_name: lab_2_service_gateway
    build: ./webapp/
    command: gunicorn --bind 0.0.0.0:8080 start:app --log-level=debug
#    restart: unless-stopped
    volumes:
      - ./webapp/:/usr/src/app/
    ports:
      - 8080:8080
    env_file:
      - ./webapp/.env.dev
    networks:
      - backend
    depends_on:
      - db
#      - redis

  reserve_service:
    image: lab_2_service_reserve
    container_name: lab_2_service_reserve
    build: ./webapp/
    command: gunicorn --bind 0.0.0.0:8070 start:app --log-level=debug
#    restart: unless-stopped
    volumes:
      - ./webapp/:/usr/src/app/
    ports:
      - 8070:8070
    env_file:
      - ./webapp/.env.dev
    networks:
      - backend
    depends_on:
      - db
#      - redis

  payment_service:
    image: lab_2_payment_service
    container_name: lab_2_payment_service
    build: ./webapp/
    command: gunicorn --bind 0.0.0.0:8060 start:app --log-level=debug
#    restart: unless-stopped
    volumes:
      - ./webapp/:/usr/src/app/
    ports:
      - 8060:8060
    env_file:
      - ./webapp/.env.dev
    networks:
      - backend
    depends_on:
      - db
#      - redis

  loyalty_service:
    image: lab_2_loyalty_service
    container_name: lab_2_loyalty_service
    build: ./webapp/
    command: gunicorn --bind 0.0.0.0:8050 start:app --log-level=debug
#    restart: unless-stopped
    volumes:
      - ./webapp/:/usr/src/app/
    ports:
      - 8050:8050
    env_file:
      - ./webapp/.env.dev
    networks:
      - backend
    depends_on:
      - db
#      - redis

  db:
    env_file: ./.env-postgresql
    container_name: postgres_container
    image: postgres:14
    volumes:
      - db:/var/lib/postgresql/data
      - ./migrations/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - backend

volumes:
  db:
    driver: local
  pgadmin:
    driver: local


networks:
  backend:
    driver: bridge
